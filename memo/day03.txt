Box Model 
    HTML의 모든 요소는 일정한 영역을 차지하게 된다
    CSS에서응 이런 영역을 Box Model이라고 한다

박스모델의 구성
    margin : 테두리 밖의 여백
    border : 테두리
    padding : 테두리와 컨텐츠 사이의 여백
    contents : 컨텐츠의 영역

    인라인 요소의 박스모델도  margin ,  border,  padding,  contents  은 설정이 가능하지만 
    width, height를 사용할 수 없으므로 컨텐츠 영역의 크기를 설정할 수 없다.

# 박스 모델 css 속성

- contents
    width : 너비;
    height : 높이;

    - 단위는 기본적으로 px이며 그 외에도 여러 단위가 있다.
    - 인라인 요소는 불가능하다.

- border    
    border : 굵기 모양 색상;
    
- padding
    padding : 4방향;
    padding : 상하 좌우;
    padding : 상 좌우 하;
    padding : 상 우 하 좌;

- margin
    margin : 4방향;
    margin : 상하 좌우;
    margin : 상 좌우 하;
    margin : 상 우 하 좌;
    
    - auto를 사용하면 요소를 중앙에 위치하게 할 수 있다.
    - 블록 요소를 세로로 배치하게 되면 margin이 중첩된다.(겹쳐진다)
    20px의 마진을 가진 요소들이 세로로 배치되면 
    각 요소들의 상하 간격이 40px이 아닌 20px이다.

display 속성
    display 속성은 HTML에서 요소를 어떻게 표시할지 결정한다.
    HTML의 요소들은 기본적으로 display 의 속성값이 설정되어 있다.

    블록요소 -> display : block
    인라인 요소 -> display : inline

    우리가 사용한 블록요소를 인라인으로 변경하고 싶다면
    display 속성에 값을 inline으로 변경한다


display 속성의 기본 4가지 값

    - none
        요소를 보이지 않게 설정한다.
        단순히 투명해지는 것이 아니라 아예 사라지게 되므로 공간을 차지하지 않는다.
    - block
        블록요소로 설정한다.
    - inline
        인라인 요소로 설정한다.
    - inline-block
        인라인 블록은 인라인과 블록의 특징을 섞어놓은 요소이며, 
        인라인처럼 컨텐츠 만큼만 영역을 차지하지만 블록처럼 컨텐츠릐 너비, 높이를 변경할 수 있다.
        내부는 block요소,  외부는 inlien요소의 특징을 갖는다.

        --------------------------------------------------------------------------------------------------------------------

        레이아웃을 만들 때 사용하는 속성
         - float
         - display의 flex  
         - display의 grid

flexbox
    레이아웃을 만드는 하나의 방식이다.
    복잡하지 않게 유연하게 요소들의 크기와 순서를 정하여
    배치할 수 있다.

    felx box의 구성
     - flex container
        네니나웃을 적용하여 배치하려는 욧소들을 감싸는 부모요소
     - flex item
        실질적으로 배치하려는 요소이며 flex container의 자식요소이더ㅏ,
        자식요소인 flex item은 여러개 만들 수 있다
    - 주축 (main axis)
     자식요소가 배치되는 방향
     - 교차축 (cross axis)
     주축을 가로지르는 방향

     # flex container의 주요 속성

배치하려는 요소들의 전체 흐름, 정렬과 관련된 속성

- display
    display : flex
    flex container 를 지정하는 속성
    
- flex-direction
    flex-direction : row | column;
    주축의 방향을 지정하는 속성
    
    1. row : 행 방향
    2. column : 열 방향

- justify-content
    컨테이너의 주축을 기준으로 아이템들을 정렬한다.
    
    1. center : 중앙 정렬
    2. space-between : 첫 아이템과 마지막 아이템을 컨테이너 영역의 양끝에 배치하고 나머지 아이템들은 동일한 간격으로 정렬된다.
    3. space-around : 모든 아이템을 동일한 간격으로 정렬한다.

- align-items
    컨테이너의 교차축을 기준으로 정렬한다.
    justify-content와 속성값은 동일하다.
    
    1. center
    2. space-between
    3. space-around

- flex-wrap
    flex-wrap : nowrap | wrap;
    컨테이너 내부의 요소들이 많거나 크기가 커서 컨테이너를 넘어가게 되었을 때 한줄로 보여줄 것인지, 여러줄로 보여줄 것인지 지정한다.
    
    1. nowrap : flex-wrap의 기본값, 줄바꿈을 하지 않고 한줄로 보여준다.
    만약 컨테이너의 크기가 작다면 각각의 아이템의 크기가 줄어든다.
    2. wrap : 컨테이너의 크기가 작다면 여러줄로 보여준다.

# flex item의 속성
배치하는 각각의 자식 요소의 순서, 크기 등의 속성

- flex
- flex-grow
- flex-shrink
- flex-basis

등등이 있으나 활용도가 높지 않다.


---------------------------------------------------------------------------------------------------------------------------------------
Semantic 태그
    태그 자체적으로 의미가 있는 태그

시멘틱 태그의 종류
    - <header></header> : 페이지의 헤더 영역
    - <footer></footer> : 회사 정보등을 담은 푸터영역
    - <nav></nav> : 다른 페이지로 이동하는 요소를 담은 네비게이션 영역
    - <main></main> : 주 컨텐츠가 들어가는 영역
    - <aside></aside> : 주 내용과는 연관성이 낮은 분리된 영역,  주로 사이드바로 사용
    - <section></section> : 컨텐츠 간 영역을 나눌 때 사용
    - <article></article> : 독립되고 반복적으로 제사용 가능한 컨텐츠 영역
    등등,,,

